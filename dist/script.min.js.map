{"version":3,"sources":["script.js"],"names":["document","addEventListener","navToggle","querySelector","navMenu","toggle","querySelectorAll","forEach","link","navLinks","classList","remove","anchor","e","preventDefault","this","getAttribute","target","scrollIntoView","behavior","window","navbar","style","background","scrollY","boxShadow","observerOptions","threshold","observer","IntersectionObserver","entries","entry","isIntersecting","opacity","transform","isValidEmail","email","test","existingNotification","message","notification","createElement","innerHTML","type","concat","cssText","body","appendChild","setTimeout","notificationStyles","animateCounter","duration","start","increment","parentNode","element","Math","requestAnimationFrame","updateCounter","animatedElements","el","transition","observe","contactForm","name","value","option","showNotification","console","log","arguments","length","undefined","textContent","floor","courseCards","heroCard","img","error","src","display","placeholder","card","progressBar","scrollTop","pageYOffset","parentElement","complete","naturalHeight","scrollPercent","scrollHeight","innerHeight","width"],"mappings":"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","file":"script.min.js","sourcesContent":["// Mobile Navigation Toggle\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const navToggle = document.querySelector('.nav-toggle');\r\n    const navMenu = document.querySelector('.nav-menu');\r\n    \r\n    if (navToggle && navMenu) {\r\n        navToggle.addEventListener('click', function() {\r\n            navMenu.classList.toggle('active');\r\n            navToggle.classList.toggle('active');\r\n        });\r\n    }\r\n    \r\n    // Close mobile menu when clicking on a link\r\n    const navLinks = document.querySelectorAll('.nav-menu a');\r\n    navLinks.forEach(link => {\r\n        link.addEventListener('click', () => {\r\n            navMenu.classList.remove('active');\r\n            navToggle.classList.remove('active');\r\n        });\r\n    });\r\n});\r\n\r\n// Smooth Scrolling for Navigation Links\r\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n    anchor.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        const target = document.querySelector(this.getAttribute('href'));\r\n        if (target) {\r\n            target.scrollIntoView({\r\n                behavior: 'smooth',\r\n                block: 'start'\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n// Navbar Background Change on Scroll\r\nwindow.addEventListener('scroll', function() {\r\n    const navbar = document.querySelector('.navbar');\r\n    if (window.scrollY > 100) {\r\n        navbar.style.background = 'rgba(255, 255, 255, 0.98)';\r\n        navbar.style.boxShadow = '0 2px 30px rgba(0, 0, 0, 0.15)';\r\n    } else {\r\n        navbar.style.background = 'rgba(255, 255, 255, 0.95)';\r\n        navbar.style.boxShadow = '0 2px 20px rgba(0, 0, 0, 0.1)';\r\n    }\r\n});\r\n\r\n// Animate Elements on Scroll\r\nconst observerOptions = {\r\n    threshold: 0.1,\r\n    rootMargin: '0px 0px -50px 0px'\r\n};\r\n\r\nconst observer = new IntersectionObserver(function(entries) {\r\n    entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n            entry.target.style.opacity = '1';\r\n            entry.target.style.transform = 'translateY(0)';\r\n        }\r\n    });\r\n}, observerOptions);\r\n\r\n// Observe all cards and feature items\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const animatedElements = document.querySelectorAll('.course-card, .product-card, .feature-item');\r\n    \r\n    animatedElements.forEach(el => {\r\n        el.style.opacity = '0';\r\n        el.style.transform = 'translateY(30px)';\r\n        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';\r\n        observer.observe(el);\r\n    });\r\n});\r\n\r\n// Form Submission Handling\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const contactForm = document.querySelector('.contact-form');\r\n    \r\n    if (contactForm) {\r\n        contactForm.addEventListener('submit', function(e) {\r\n            e.preventDefault();\r\n            \r\n            // Get form data\r\n            const formData = new FormData(this);\r\n            const name = this.querySelector('input[type=\"text\"]').value;\r\n            const email = this.querySelector('input[type=\"email\"]').value;\r\n            const option = this.querySelector('select').value;\r\n            const message = this.querySelector('textarea').value;\r\n            \r\n            // Basic validation\r\n            if (!name || !email || !option) {\r\n                showNotification('Please fill in all required fields.', 'error');\r\n                return;\r\n            }\r\n            \r\n            if (!isValidEmail(email)) {\r\n                showNotification('Please enter a valid email address.', 'error');\r\n                return;\r\n            }\r\n            \r\n            // Simulate form submission\r\n            showNotification('Thank you! We\\'ll contact you soon.', 'success');\r\n            \r\n            // Reset form\r\n            this.reset();\r\n            \r\n            // Here you would typically send the data to your server\r\n            console.log('Form submitted:', { name, email, option, message });\r\n        });\r\n    }\r\n});\r\n\r\n// Email validation\r\nfunction isValidEmail(email) {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n}\r\n\r\n// Notification system\r\nfunction showNotification(message, type = 'info') {\r\n    // Remove existing notifications\r\n    const existingNotification = document.querySelector('.notification');\r\n    if (existingNotification) {\r\n        existingNotification.remove();\r\n    }\r\n    \r\n    // Create notification element\r\n    const notification = document.createElement('div');\r\n    notification.className = `notification notification-${type}`;\r\n    notification.innerHTML = `\r\n        <div class=\"notification-content\">\r\n            <span class=\"notification-message\">${message}</span>\r\n            <button class=\"notification-close\">&times;</button>\r\n        </div>\r\n    `;\r\n    \r\n    // Add styles\r\n    notification.style.cssText = `\r\n        position: fixed;\r\n        top: 20px;\r\n        right: 20px;\r\n        background: ${type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#3b82f6'};\r\n        color: white;\r\n        padding: 1rem 1.5rem;\r\n        border-radius: 10px;\r\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\r\n        z-index: 10000;\r\n        transform: translateX(100%);\r\n        transition: transform 0.3s ease;\r\n        max-width: 400px;\r\n    `;\r\n    \r\n    // Add to page\r\n    document.body.appendChild(notification);\r\n    \r\n    // Animate in\r\n    setTimeout(() => {\r\n        notification.style.transform = 'translateX(0)';\r\n    }, 100);\r\n    \r\n    // Close button functionality\r\n    const closeBtn = notification.querySelector('.notification-close');\r\n    closeBtn.addEventListener('click', () => {\r\n        notification.style.transform = 'translateX(100%)';\r\n        setTimeout(() => notification.remove(), 300);\r\n    });\r\n    \r\n    // Auto-remove after 5 seconds\r\n    setTimeout(() => {\r\n        if (notification.parentNode) {\r\n            notification.style.transform = 'translateX(100%)';\r\n            setTimeout(() => notification.remove(), 300);\r\n        }\r\n    }, 5000);\r\n}\r\n\r\n// Add CSS for notifications\r\nconst notificationStyles = document.createElement('style');\r\nnotificationStyles.textContent = `\r\n    .notification-content {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        gap: 1rem;\r\n    }\r\n    \r\n    .notification-close {\r\n        background: none;\r\n        border: none;\r\n        color: white;\r\n        font-size: 1.5rem;\r\n        cursor: pointer;\r\n        padding: 0;\r\n        line-height: 1;\r\n    }\r\n    \r\n    .notification-close:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\ndocument.head.appendChild(notificationStyles);\r\n\r\n// Counter Animation for Hero Stats\r\nfunction animateCounter(element, target, duration = 2000) {\r\n    let start = 0;\r\n    const increment = target / (duration / 16);\r\n    \r\n    function updateCounter() {\r\n        start += increment;\r\n        if (start < target) {\r\n            element.textContent = Math.floor(start) + '+';\r\n            requestAnimationFrame(updateCounter);\r\n        } else {\r\n            element.textContent = target + '+';\r\n        }\r\n    }\r\n    \r\n    updateCounter();\r\n}\r\n\r\n// Initialize counter animation when hero section is visible\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const heroCard = document.querySelector('.hero-card h3');\r\n    if (heroCard) {\r\n        const observer = new IntersectionObserver(function(entries) {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    animateCounter(heroCard, 500);\r\n                    observer.unobserve(entry.target);\r\n                }\r\n            });\r\n        });\r\n        observer.observe(heroCard);\r\n    }\r\n});\r\n\r\n// Add hover effects for course cards\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const courseCards = document.querySelectorAll('.course-card');\r\n    \r\n    courseCards.forEach(card => {\r\n        card.addEventListener('mouseenter', function() {\r\n            this.style.transform = 'translateY(-15px) scale(1.02)';\r\n        });\r\n        \r\n        card.addEventListener('mouseleave', function() {\r\n            this.style.transform = 'translateY(0) scale(1)';\r\n        });\r\n    });\r\n});\r\n\r\n// Add loading animation for images\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const images = document.querySelectorAll('img');\r\n    \r\n    images.forEach(img => {\r\n        // Set initial state\r\n        img.style.opacity = '0';\r\n        img.style.transition = 'opacity 0.3s ease';\r\n        \r\n        // Handle successful load\r\n        img.addEventListener('load', function() {\r\n            console.log('Image loaded successfully:', this.src);\r\n            this.style.opacity = '1';\r\n        });\r\n        \r\n        // Handle load errors\r\n        img.addEventListener('error', function() {\r\n            console.error('Image failed to load:', this.src);\r\n            this.style.display = 'none';\r\n            // Create a placeholder\r\n            const placeholder = document.createElement('div');\r\n            placeholder.style.cssText = `\r\n                height: 100%;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                color: #6b7280;\r\n                font-size: 14px;\r\n                background: #f3f4f6;\r\n                border: 2px dashed #d1d5db;\r\n            `;\r\n            placeholder.textContent = 'Image not found';\r\n            this.parentElement.appendChild(placeholder);\r\n        });\r\n        \r\n        // Force opacity to 1 after a delay if image is already loaded\r\n        setTimeout(() => {\r\n            if (img.complete && img.naturalHeight !== 0) {\r\n                img.style.opacity = '1';\r\n            }\r\n        }, 100);\r\n    });\r\n});\r\n\r\n// Add scroll progress indicator\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const progressBar = document.createElement('div');\r\n    progressBar.style.cssText = `\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 0%;\r\n        height: 3px;\r\n        background: linear-gradient(90deg, #fbbf24, #2563eb);\r\n        z-index: 10001;\r\n        transition: width 0.1s ease;\r\n    `;\r\n    document.body.appendChild(progressBar);\r\n    \r\n    window.addEventListener('scroll', function() {\r\n        const scrollTop = window.pageYOffset;\r\n        const docHeight = document.body.scrollHeight - window.innerHeight;\r\n        const scrollPercent = (scrollTop / docHeight) * 100;\r\n        progressBar.style.width = scrollPercent + '%';\r\n    });\r\n});\r\n"]}