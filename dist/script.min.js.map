{"version":3,"sources":["script.js"],"names":["document","addEventListener","navToggle","querySelector","navMenu","toggle","querySelectorAll","forEach","link","navLinks","classList","remove","anchor","e","preventDefault","this","getAttribute","target","scrollIntoView","behavior","window","navbar","style","background","scrollY","boxShadow","observerOptions","threshold","observer","IntersectionObserver","entries","entry","isIntersecting","opacity","transform","isValidEmail","email","test","existingNotification","message","notification","createElement","innerHTML","type","concat","cssText","body","appendChild","setTimeout","notificationStyles","animateCounter","duration","start","increment","parentNode","element","Math","requestAnimationFrame","updateCounter","animatedElements","el","transition","observe","contactForm","name","value","option","showNotification","console","log","arguments","length","undefined","textContent","floor","courseCards","heroCard","img","error","src","display","placeholder","card","progressBar","scrollTop","pageYOffset","canvas","ctx","resizeCanvas","width","innerWidth","createParticles","particles","parentElement","particle","complete","vy","naturalHeight","animationId","progressPopup","getElementById","scrollPercent","scrollHeight","innerHeight","getContext","wizardSteps","nextBtn","currentStep","height","i","push","x","random","y","vx","initWizard","size","currentStepSpan","progressPercent","updateNavigation","totalSteps","beginPath","PI","fillStyle","animateParticles","showStep","stepIndex","updateProgress","add","nextStep","currentStepElement","step","index","prevBtn","progressFill","input","formData","generateSummary","solution","progress","round","industry","problem","summary","summaryElement","className","notes","product_type","productType","productName","Object","keys","key","showPaymentError","Error","trim","disabled","id","replace","RAZORPAY_KEY_SECRET","options","resetForm","rzp","open","handlePaymentSuccess","description","RAZORPAY_KEY_ID","modal","amount","currency","image","showPaymentSuccess","response","paymentDetails","razorpay_payment_id","razorpay_order_id","razorpay_signature","product_name","theme","ondismiss","successModal","styles","Razorpay","closePaymentSuccess","headers","errorModal","stringify","head","closePaymentError","timestamp","Date","toISOString","sendPaymentToBackend","fetch","method","Content-Type","JSON","then","json","data"],"mappings":"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","file":"script.min.js","sourcesContent":["// Mobile Navigation Toggle\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const navToggle = document.querySelector('.nav-toggle');\r\n    const navMenu = document.querySelector('.nav-menu');\r\n    \r\n    if (navToggle && navMenu) {\r\n        navToggle.addEventListener('click', function() {\r\n            navMenu.classList.toggle('active');\r\n            navToggle.classList.toggle('active');\r\n        });\r\n    }\r\n    \r\n    // Close mobile menu when clicking on a link\r\n    const navLinks = document.querySelectorAll('.nav-menu a');\r\n    navLinks.forEach(link => {\r\n        link.addEventListener('click', () => {\r\n            navMenu.classList.remove('active');\r\n            navToggle.classList.remove('active');\r\n        });\r\n    });\r\n});\r\n\r\n// Smooth Scrolling for Navigation Links\r\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n    anchor.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        const target = document.querySelector(this.getAttribute('href'));\r\n        if (target) {\r\n            target.scrollIntoView({\r\n                behavior: 'smooth',\r\n                block: 'start'\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n// Navbar Background Change on Scroll\r\nwindow.addEventListener('scroll', function() {\r\n    const navbar = document.querySelector('.navbar');\r\n    if (window.scrollY > 100) {\r\n        navbar.style.background = 'rgba(255, 255, 255, 0.98)';\r\n        navbar.style.boxShadow = '0 2px 30px rgba(0, 0, 0, 0.15)';\r\n    } else {\r\n        navbar.style.background = 'rgba(255, 255, 255, 0.95)';\r\n        navbar.style.boxShadow = '0 2px 20px rgba(0, 0, 0, 0.1)';\r\n    }\r\n});\r\n\r\n// Animate Elements on Scroll\r\nconst observerOptions = {\r\n    threshold: 0.1,\r\n    rootMargin: '0px 0px -50px 0px'\r\n};\r\n\r\nconst observer = new IntersectionObserver(function(entries) {\r\n    entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n            entry.target.style.opacity = '1';\r\n            entry.target.style.transform = 'translateY(0)';\r\n        }\r\n    });\r\n}, observerOptions);\r\n\r\n// Observe all cards and feature items\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const animatedElements = document.querySelectorAll('.course-card, .product-card, .feature-item');\r\n    \r\n    animatedElements.forEach(el => {\r\n        el.style.opacity = '0';\r\n        el.style.transform = 'translateY(30px)';\r\n        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';\r\n        observer.observe(el);\r\n    });\r\n});\r\n\r\n// Form Submission Handling\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const contactForm = document.querySelector('.contact-form');\r\n    \r\n    if (contactForm) {\r\n        contactForm.addEventListener('submit', function(e) {\r\n            e.preventDefault();\r\n            \r\n            // Get form data\r\n            const formData = new FormData(this);\r\n            const name = this.querySelector('input[type=\"text\"]').value;\r\n            const email = this.querySelector('input[type=\"email\"]').value;\r\n            const option = this.querySelector('select').value;\r\n            const message = this.querySelector('textarea').value;\r\n            \r\n            // Basic validation\r\n            if (!name || !email || !option) {\r\n                showNotification('Please fill in all required fields.', 'error');\r\n                return;\r\n            }\r\n            \r\n            if (!isValidEmail(email)) {\r\n                showNotification('Please enter a valid email address.', 'error');\r\n                return;\r\n            }\r\n            \r\n            // Simulate form submission\r\n            showNotification('Thank you! We\\'ll contact you soon.', 'success');\r\n            \r\n            // Reset form\r\n            this.reset();\r\n            \r\n            // Here you would typically send the data to your server\r\n            console.log('Form submitted:', { name, email, option, message });\r\n        });\r\n    }\r\n});\r\n\r\n// Email validation\r\nfunction isValidEmail(email) {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n}\r\n\r\n// Notification system\r\nfunction showNotification(message, type = 'info') {\r\n    // Remove existing notifications\r\n    const existingNotification = document.querySelector('.notification');\r\n    if (existingNotification) {\r\n        existingNotification.remove();\r\n    }\r\n    \r\n    // Create notification element\r\n    const notification = document.createElement('div');\r\n    notification.className = `notification notification-${type}`;\r\n    notification.innerHTML = `\r\n        <div class=\"notification-content\">\r\n            <span class=\"notification-message\">${message}</span>\r\n            <button class=\"notification-close\">&times;</button>\r\n        </div>\r\n    `;\r\n    \r\n    // Add styles\r\n    notification.style.cssText = `\r\n        position: fixed;\r\n        top: 20px;\r\n        right: 20px;\r\n        background: ${type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#3b82f6'};\r\n        color: white;\r\n        padding: 1rem 1.5rem;\r\n        border-radius: 10px;\r\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\r\n        z-index: 10000;\r\n        transform: translateX(100%);\r\n        transition: transform 0.3s ease;\r\n        max-width: 400px;\r\n    `;\r\n    \r\n    // Add to page\r\n    document.body.appendChild(notification);\r\n    \r\n    // Animate in\r\n    setTimeout(() => {\r\n        notification.style.transform = 'translateX(0)';\r\n    }, 100);\r\n    \r\n    // Close button functionality\r\n    const closeBtn = notification.querySelector('.notification-close');\r\n    closeBtn.addEventListener('click', () => {\r\n        notification.style.transform = 'translateX(100%)';\r\n        setTimeout(() => notification.remove(), 300);\r\n    });\r\n    \r\n    // Auto-remove after 5 seconds\r\n    setTimeout(() => {\r\n        if (notification.parentNode) {\r\n            notification.style.transform = 'translateX(100%)';\r\n            setTimeout(() => notification.remove(), 300);\r\n        }\r\n    }, 5000);\r\n}\r\n\r\n// Add CSS for notifications\r\nconst notificationStyles = document.createElement('style');\r\nnotificationStyles.textContent = `\r\n    .notification-content {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        gap: 1rem;\r\n    }\r\n    \r\n    .notification-close {\r\n        background: none;\r\n        border: none;\r\n        color: white;\r\n        font-size: 1.5rem;\r\n        cursor: pointer;\r\n        padding: 0;\r\n        line-height: 1;\r\n    }\r\n    \r\n    .notification-close:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\ndocument.head.appendChild(notificationStyles);\r\n\r\n// Counter Animation for Hero Stats\r\nfunction animateCounter(element, target, duration = 2000) {\r\n    let start = 0;\r\n    const increment = target / (duration / 16);\r\n    \r\n    function updateCounter() {\r\n        start += increment;\r\n        if (start < target) {\r\n            element.textContent = Math.floor(start) + '+';\r\n            requestAnimationFrame(updateCounter);\r\n        } else {\r\n            element.textContent = target + '+';\r\n        }\r\n    }\r\n    \r\n    updateCounter();\r\n}\r\n\r\n// Initialize counter animation when hero section is visible\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const heroCard = document.querySelector('.hero-card h3');\r\n    if (heroCard) {\r\n        const observer = new IntersectionObserver(function(entries) {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    animateCounter(heroCard, 500);\r\n                    observer.unobserve(entry.target);\r\n                }\r\n            });\r\n        });\r\n        observer.observe(heroCard);\r\n    }\r\n});\r\n\r\n// Add hover effects for course cards\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const courseCards = document.querySelectorAll('.course-card');\r\n    \r\n    courseCards.forEach(card => {\r\n        card.addEventListener('mouseenter', function() {\r\n            this.style.transform = 'translateY(-15px) scale(1.02)';\r\n        });\r\n        \r\n        card.addEventListener('mouseleave', function() {\r\n            this.style.transform = 'translateY(0) scale(1)';\r\n        });\r\n    });\r\n});\r\n\r\n// Add loading animation for images\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const images = document.querySelectorAll('img');\r\n    \r\n    images.forEach(img => {\r\n        // Set initial state\r\n        img.style.opacity = '0';\r\n        img.style.transition = 'opacity 0.3s ease';\r\n        \r\n        // Handle successful load\r\n        img.addEventListener('load', function() {\r\n            console.log('Image loaded successfully:', this.src);\r\n            this.style.opacity = '1';\r\n        });\r\n        \r\n        // Handle load errors\r\n        img.addEventListener('error', function() {\r\n            console.error('Image failed to load:', this.src);\r\n            this.style.display = 'none';\r\n            // Create a placeholder\r\n            const placeholder = document.createElement('div');\r\n            placeholder.style.cssText = `\r\n                height: 100%;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                color: #6b7280;\r\n                font-size: 14px;\r\n                background: #f3f4f6;\r\n                border: 2px dashed #d1d5db;\r\n            `;\r\n            placeholder.textContent = 'Image not found';\r\n            this.parentElement.appendChild(placeholder);\r\n        });\r\n        \r\n        // Force opacity to 1 after a delay if image is already loaded\r\n        setTimeout(() => {\r\n            if (img.complete && img.naturalHeight !== 0) {\r\n                img.style.opacity = '1';\r\n            }\r\n        }, 100);\r\n    });\r\n});\r\n\r\n// Add scroll progress indicator\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const progressBar = document.createElement('div');\r\n    progressBar.style.cssText = `\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 0%;\r\n        height: 3px;\r\n        background: linear-gradient(90deg, #fbbf24, #2563eb);\r\n        z-index: 10001;\r\n        transition: width 0.1s ease;\r\n    `;\r\n    document.body.appendChild(progressBar);\r\n    \r\n    window.addEventListener('scroll', function() {\r\n        const scrollTop = window.pageYOffset;\r\n        const docHeight = document.body.scrollHeight - window.innerHeight;\r\n        const scrollPercent = (scrollTop / docHeight) * 100;\r\n        progressBar.style.width = scrollPercent + '%';\r\n    });\r\n});\r\n\r\n// Modern Hero Section Functionality\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    // Particle Animation System\r\n    const canvas = document.getElementById('particleCanvas');\r\n    if (canvas) {\r\n        const ctx = canvas.getContext('2d');\r\n        let particles = [];\r\n        let animationId;\r\n\r\n        // Resize canvas to match window size\r\n        const resizeCanvas = () => {\r\n            canvas.width = window.innerWidth;\r\n            canvas.height = window.innerHeight;\r\n        };\r\n\r\n        // Create particles\r\n        const createParticles = () => {\r\n            particles = [];\r\n            for (let i = 0; i < 100; i++) {\r\n                particles.push({\r\n                    x: Math.random() * canvas.width,\r\n                    y: Math.random() * canvas.height,\r\n                    vx: (Math.random() - 0.5) * 0.5,\r\n                    vy: (Math.random() - 0.5) * 0.5,\r\n                    size: Math.random() * 2 + 1,\r\n                    opacity: Math.random() * 0.5 + 0.2\r\n                });\r\n            }\r\n        };\r\n\r\n        // Animate particles\r\n        const animateParticles = () => {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            \r\n            particles.forEach(particle => {\r\n                particle.x += particle.vx;\r\n                particle.y += particle.vy;\r\n                \r\n                // Bounce off boundaries\r\n                if (particle.x < 0 || particle.x > canvas.width) particle.vx *= -1;\r\n                if (particle.y < 0 || particle.y > canvas.height) particle.vy *= -1;\r\n                \r\n                // Draw particle\r\n                ctx.beginPath();\r\n                ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\r\n                ctx.fillStyle = `rgba(99, 102, 241, ${particle.opacity})`;\r\n                ctx.fill();\r\n            });\r\n            \r\n            animationId = requestAnimationFrame(animateParticles);\r\n        };\r\n\r\n        // Initialize particle system\r\n        resizeCanvas();\r\n        createParticles();\r\n        animateParticles();\r\n\r\n        // Handle window resize\r\n        window.addEventListener('resize', resizeCanvas);\r\n    }\r\n\r\n    // Progress Popup System\r\n    const progressPopup = document.getElementById('progressPopup');\r\n    if (progressPopup) {\r\n        // Show popup after 3 seconds\r\n        setTimeout(() => {\r\n            progressPopup.classList.add('show');\r\n            // Hide popup after 4 seconds\r\n            setTimeout(() => {\r\n                progressPopup.classList.remove('show');\r\n            }, 4000);\r\n        }, 3000);\r\n    }\r\n\r\n    // Form Wizard System\r\n    const wizardSteps = document.querySelectorAll('.wizard-step');\r\n    const progressFill = document.getElementById('progressFill');\r\n    const currentStepSpan = document.getElementById('currentStep');\r\n    const progressPercent = document.getElementById('progressPercent');\r\n    const prevBtn = document.getElementById('prevBtn');\r\n    const nextBtn = document.getElementById('nextBtn');\r\n    \r\n    let currentStep = 0;\r\n    const totalSteps = wizardSteps.length;\r\n\r\n    // Form data storage\r\n    const formData = {\r\n        industry: '',\r\n        problem: '',\r\n        target: '',\r\n        solution: ''\r\n    };\r\n\r\n    // Initialize wizard\r\n    const initWizard = () => {\r\n        updateProgress();\r\n        updateNavigation();\r\n    };\r\n\r\n    // Update progress bar and info\r\n    const updateProgress = () => {\r\n        const progress = ((currentStep + 1) / totalSteps) * 100;\r\n        if (progressFill) progressFill.style.width = `${progress}%`;\r\n        if (currentStepSpan) currentStepSpan.textContent = `Step ${currentStep + 1} of ${totalSteps}`;\r\n        if (progressPercent) progressPercent.textContent = `${Math.round(progress)}%`;\r\n    };\r\n\r\n    // Update navigation buttons\r\n    const updateNavigation = () => {\r\n        if (prevBtn) prevBtn.disabled = currentStep === 0;\r\n        \r\n        if (currentStep < totalSteps - 1) {\r\n            if (nextBtn) {\r\n                nextBtn.innerHTML = '<span>Next</span><i class=\"fas fa-chevron-right\"></i>';\r\n                nextBtn.className = 'btn btn-primary';\r\n            }\r\n        } else if (currentStep === totalSteps - 1) {\r\n            if (nextBtn) {\r\n                nextBtn.innerHTML = '<span>Generate Summary</span><i class=\"fas fa-magic\"></i>';\r\n                nextBtn.className = 'btn btn-primary';\r\n            }\r\n        } else {\r\n            if (nextBtn) {\r\n                nextBtn.innerHTML = '<span>Start Over</span><i class=\"fas fa-redo\"></i>';\r\n                nextBtn.className = 'btn btn-primary';\r\n            }\r\n        }\r\n    };\r\n\r\n    // Show step\r\n    const showStep = (stepIndex) => {\r\n        wizardSteps.forEach((step, index) => {\r\n            step.classList.toggle('active', index === stepIndex);\r\n        });\r\n        currentStep = stepIndex;\r\n        updateProgress();\r\n        updateNavigation();\r\n    };\r\n\r\n    // Next step\r\n    const nextStep = () => {\r\n        if (currentStep < totalSteps - 1) {\r\n            // Validate current step\r\n            const currentStepElement = wizardSteps[currentStep];\r\n            const input = currentStepElement.querySelector('input, select');\r\n            \r\n            if (input && !input.value.trim()) {\r\n                showNotification('Please fill in this field to continue.', 'error');\r\n                return;\r\n            }\r\n            \r\n            // Store data\r\n            if (input) {\r\n                formData[input.id.replace('Input', '').replace('Select', '')] = input.value;\r\n            }\r\n            \r\n            showStep(currentStep + 1);\r\n        } else if (currentStep === totalSteps - 1) {\r\n            // Generate summary\r\n            generateSummary();\r\n            showStep(currentStep + 1);\r\n        } else {\r\n            // Start over\r\n            showStep(0);\r\n            resetForm();\r\n        }\r\n    };\r\n\r\n    // Previous step\r\n    const prevStep = () => {\r\n        if (currentStep > 0) {\r\n            showStep(currentStep - 1);\r\n        }\r\n    };\r\n\r\n    // Generate startup summary\r\n    const generateSummary = () => {\r\n        const summaryElement = document.getElementById('startupSummary');\r\n        if (summaryElement) {\r\n            const { industry, problem, target, solution } = formData;\r\n            const summary = `A ${industry} startup that solves ${problem} for ${target} by ${solution}.`;\r\n            summaryElement.textContent = summary;\r\n        }\r\n    };\r\n\r\n    // Reset form\r\n    const resetForm = () => {\r\n        Object.keys(formData).forEach(key => {\r\n            formData[key] = '';\r\n        });\r\n        \r\n        // Clear inputs\r\n        document.querySelectorAll('.wizard-input').forEach(input => {\r\n            input.value = '';\r\n        });\r\n    };\r\n\r\n    // Event listeners for wizard\r\n    if (nextBtn) {\r\n        nextBtn.addEventListener('click', nextStep);\r\n    }\r\n    \r\n    if (prevBtn) {\r\n        prevBtn.addEventListener('click', prevStep);\r\n    }\r\n\r\n    // Initialize wizard\r\n    if (wizardSteps.length > 0) {\r\n        initWizard();\r\n    }\r\n\r\n    // Input change handlers for form validation\r\n    document.querySelectorAll('.wizard-input').forEach(input => {\r\n        input.addEventListener('input', function() {\r\n            // Enable next button if input has value\r\n            if (this.value.trim()) {\r\n                if (nextBtn) nextBtn.disabled = false;\r\n            } else {\r\n                if (nextBtn) nextBtn.disabled = true;\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\n// Razorpay Payment Gateway Integration\r\nconst RAZORPAY_KEY_ID = 'rzp_live_SU1WH99Cd7PMny';\r\nconst RAZORPAY_KEY_SECRET = 'aZKKjeUvoxKQHCXg12w1AP0G';\r\n\r\n\r\n\r\n// Function to open Razorpay payment\r\nfunction openRazorpay(productType, amount, productName) {\r\n    // Create order options\r\n    const options = {\r\n        key: RAZORPAY_KEY_ID,\r\n        amount: amount * 100, // Razorpay expects amount in paise\r\n        currency: 'INR',\r\n        name: 'StartupBuilder',\r\n        description: productName,\r\n        image: 'https://via.placeholder.com/150x50/2563eb/ffffff?text=StartupBuilder',\r\n        handler: function(response) {\r\n            // Payment successful\r\n            handlePaymentSuccess(response, productType, amount, productName);\r\n        },\r\n        prefill: {\r\n            name: '',\r\n            email: '',\r\n            contact: ''\r\n        },\r\n        notes: {\r\n            product_type: productType,\r\n            product_name: productName\r\n        },\r\n        theme: {\r\n            color: '#fbbf24'\r\n        },\r\n        modal: {\r\n            ondismiss: function() {\r\n                console.log('Payment modal closed');\r\n            }\r\n        },\r\n        // Add error handling\r\n        onError: function(error) {\r\n            console.error('Payment failed:', error);\r\n            showPaymentError(error);\r\n        }\r\n    };\r\n\r\n    // Create Razorpay instance and open\r\n    try {\r\n        // Check if Razorpay is loaded\r\n        if (typeof Razorpay === 'undefined') {\r\n            throw new Error('Razorpay SDK not loaded');\r\n        }\r\n        \r\n        const rzp = new Razorpay(options);\r\n        rzp.open();\r\n    } catch (error) {\r\n        console.error('Error creating Razorpay instance:', error);\r\n        showPaymentError({ description: 'Failed to initialize payment gateway. Please try again later.' });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Show payment error\r\nfunction showPaymentError(error) {\r\n    const errorModal = document.createElement('div');\r\n    errorModal.className = 'payment-error-modal';\r\n    errorModal.innerHTML = `\r\n        <div class=\"modal-content\">\r\n            <div class=\"error-icon\">\r\n                <i class=\"fas fa-exclamation-triangle\"></i>\r\n            </div>\r\n            <h2>Payment Failed</h2>\r\n            <p>Sorry, something went wrong with your payment.</p>\r\n            <div class=\"error-details\">\r\n                <p><strong>Error:</strong> ${error.description || 'Unknown error occurred'}</p>\r\n            </div>\r\n            <p class=\"error-message\">Please try again or contact support if the problem persists.</p>\r\n            <div class=\"error-actions\">\r\n                <button class=\"btn btn-primary\" onclick=\"closePaymentError()\">Try Again</button>\r\n                <button class=\"btn btn-outline\" onclick=\"closePaymentError()\">Close</button>\r\n            </div>\r\n        </div>\r\n    `;\r\n    \r\n    document.body.appendChild(errorModal);\r\n    \r\n    // Add CSS for error modal\r\n    if (!document.getElementById('payment-error-styles')) {\r\n        const styles = document.createElement('style');\r\n        styles.id = 'payment-error-styles';\r\n        styles.textContent = `\r\n            .payment-error-modal {\r\n                position: fixed;\r\n                top: 0;\r\n                left: 0;\r\n                width: 100%;\r\n                height: 100%;\r\n                background: rgba(0, 0, 0, 0.8);\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                z-index: 10000;\r\n                animation: fadeIn 0.3s ease;\r\n            }\r\n            \r\n            .error-icon {\r\n                font-size: 80px;\r\n                color: #ef4444;\r\n                margin-bottom: 20px;\r\n                animation: shake 0.6s ease;\r\n            }\r\n            \r\n            .error-actions {\r\n                display: flex;\r\n                gap: 12px;\r\n                justify-content: center;\r\n                margin-top: 20px;\r\n            }\r\n            \r\n            @keyframes shake {\r\n                0%, 100% { transform: translateX(0); }\r\n                25% { transform: translateX(-10px); }\r\n                75% { transform: translateX(10px); }\r\n            }\r\n        `;\r\n        document.head.appendChild(styles);\r\n    }\r\n}\r\n\r\n// Close payment error modal\r\nfunction closePaymentError() {\r\n    const modal = document.querySelector('.payment-error-modal');\r\n    if (modal) {\r\n        modal.remove();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Handle successful payment\r\nfunction handlePaymentSuccess(response, productType, amount, productName) {\r\n    console.log('Payment successful:', response);\r\n    \r\n    // Show success message\r\n    showPaymentSuccess(productType, amount, productName);\r\n    \r\n    // Here you would typically send the payment details to your backend\r\n    // to verify the payment and process the order\r\n    \r\n    // For now, we'll just log the details\r\n    const paymentDetails = {\r\n        razorpay_payment_id: response.razorpay_payment_id,\r\n        razorpay_order_id: response.razorpay_order_id,\r\n        razorpay_signature: response.razorpay_signature,\r\n        product_type: productType,\r\n        product_name: productName,\r\n        amount: amount,\r\n        currency: 'INR',\r\n        timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    console.log('Payment Details:', paymentDetails);\r\n    \r\n    // You can send this to your backend API\r\n    // sendPaymentToBackend(paymentDetails);\r\n}\r\n\r\n// Show payment success message\r\nfunction showPaymentSuccess(productType, amount, productName) {\r\n    // Create success modal\r\n    const successModal = document.createElement('div');\r\n    successModal.className = 'payment-success-modal';\r\n    successModal.innerHTML = `\r\n        <div class=\"modal-content\">\r\n            <div class=\"success-icon\">\r\n                <i class=\"fas fa-check-circle\"></i>\r\n            </div>\r\n            <h2>Payment Successful!</h2>\r\n            <p>Thank you for purchasing <strong>${productName}</strong></p>\r\n            <div class=\"payment-details\">\r\n                <p><strong>Amount:</strong> ₹${amount}</p>\r\n                <p><strong>Product:</strong> ${productName}</p>\r\n            </div>\r\n            <p class=\"success-message\">You will receive access details via email shortly.</p>\r\n            <button class=\"btn btn-primary\" onclick=\"closePaymentSuccess()\">Continue</button>\r\n        </div>\r\n    `;\r\n    \r\n    document.body.appendChild(successModal);\r\n    \r\n    // Add CSS for the modal\r\n    if (!document.getElementById('payment-success-styles')) {\r\n        const styles = document.createElement('style');\r\n        styles.id = 'payment-success-styles';\r\n        styles.textContent = `\r\n            .payment-success-modal {\r\n                position: fixed;\r\n                top: 0;\r\n                left: 0;\r\n                width: 100%;\r\n                height: 100%;\r\n                background: rgba(0, 0, 0, 0.8);\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                z-index: 10000;\r\n                animation: fadeIn 0.3s ease;\r\n            }\r\n            \r\n            .modal-content {\r\n                background: white;\r\n                padding: 40px;\r\n                border-radius: 20px;\r\n                text-align: center;\r\n                max-width: 500px;\r\n                width: 90%;\r\n                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n                animation: slideUp 0.3s ease;\r\n            }\r\n            \r\n            .success-icon {\r\n                font-size: 80px;\r\n                color: #10b981;\r\n                margin-bottom: 20px;\r\n                animation: bounce 0.6s ease;\r\n            }\r\n            \r\n            .modal-content h2 {\r\n                color: #1f2937;\r\n                margin-bottom: 16px;\r\n                font-size: 28px;\r\n            }\r\n            \r\n            .modal-content p {\r\n                color: #6b7280;\r\n                margin-bottom: 12px;\r\n                font-size: 16px;\r\n            }\r\n            \r\n            .payment-details {\r\n                background: #f9fafb;\r\n                padding: 20px;\r\n                border-radius: 12px;\r\n                margin: 20px 0;\r\n                border: 1px solid #e5e7eb;\r\n            }\r\n            \r\n            .payment-details p {\r\n                margin: 8px 0;\r\n                color: #374151;\r\n            }\r\n            \r\n            .success-message {\r\n                color: #059669;\r\n                font-weight: 600;\r\n                margin: 20px 0;\r\n            }\r\n            \r\n            @keyframes fadeIn {\r\n                from { opacity: 0; }\r\n                to { opacity: 1; }\r\n            }\r\n            \r\n            @keyframes slideUp {\r\n                from { transform: translateY(50px); opacity: 0; }\r\n                to { transform: translateY(0); opacity: 1; }\r\n            }\r\n            \r\n            @keyframes bounce {\r\n                0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\r\n                40% { transform: translateY(-20px); }\r\n                60% { transform: translateY(-10px); }\r\n            }\r\n        `;\r\n        document.head.appendChild(styles);\r\n    }\r\n}\r\n\r\n// Close payment success modal\r\nfunction closePaymentSuccess() {\r\n    const modal = document.querySelector('.payment-success-modal');\r\n    if (modal) {\r\n        modal.remove();\r\n    }\r\n}\r\n\r\n// Function to send payment details to backend (implement as needed)\r\nfunction sendPaymentToBackend(paymentDetails) {\r\n    // Example implementation - replace with your actual backend API\r\n    fetch('/api/payment/verify', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(paymentDetails)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.log('Payment verified with backend:', data);\r\n    })\r\n    .catch(error => {\r\n        console.error('Error sending payment to backend:', error);\r\n    });\r\n}\r\n"]}